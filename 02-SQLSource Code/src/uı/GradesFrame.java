package uÄ±;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Grades;
import java.util.List;

public class GradesFrame extends javax.swing.JFrame {

    /**
     * Creates new form GradesFrame
     */
    public GradesFrame() {
        initComponents();
        refreshGradesTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtStudentId = new javax.swing.JTextField();
        txtCourseId = new javax.swing.JTextField();
        txtMidterm = new javax.swing.JTextField();
        txtFinal = new javax.swing.JTextField();
        txtHomework = new javax.swing.JTextField();
        txtLetterGrade = new javax.swing.JTextField();
        btnAddGrade = new javax.swing.JButton();
        btnBackToMenu = new javax.swing.JButton();
        btnEditGrade = new javax.swing.JButton();
        btnDeleteGrade = new javax.swing.JButton();
        btnListAllGrades = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGrades = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Grades Management");

        jLabel3.setText("Student ID:");

        jLabel4.setText("Course ID:");

        jLabel5.setText("Midterm:");

        jLabel6.setText("Homework:");

        jLabel7.setText("Final:");

        jLabel8.setText("Letter Grade:");

        txtStudentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentIdActionPerformed(evt);
            }
        });

        btnAddGrade.setText("Add Grade");
        btnAddGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddGradeActionPerformed(evt);
            }
        });

        btnBackToMenu.setText("Main Menu");
        btnBackToMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToMenuActionPerformed(evt);
            }
        });

        btnEditGrade.setText("Edit Grade");
        btnEditGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditGradeActionPerformed(evt);
            }
        });

        btnDeleteGrade.setText("Delete Grade");
        btnDeleteGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteGradeActionPerformed(evt);
            }
        });

        btnListAllGrades.setText("List All Grades");
        btnListAllGrades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListAllGradesActionPerformed(evt);
            }
        });

        tblGrades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Grade ID", "Student ID", "Course ID", "Midterm ID", "Homework", "Final", "Letter Grade"
            }
        ));
        jScrollPane1.setViewportView(tblGrades);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(btnBackToMenu)
                        .addGap(292, 292, 292)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtStudentId)
                            .addComponent(txtCourseId)
                            .addComponent(txtMidterm)
                            .addComponent(txtHomework)
                            .addComponent(txtFinal)
                            .addComponent(txtLetterGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAddGrade)
                            .addComponent(btnEditGrade)
                            .addComponent(btnDeleteGrade)
                            .addComponent(btnListAllGrades)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 947, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(btnBackToMenu))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddGrade)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditGrade)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteGrade)
                        .addGap(18, 18, 18)
                        .addComponent(btnListAllGrades))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtMidterm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtHomework, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtLetterGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void refreshGradesTable() {
    DefaultTableModel model = (DefaultTableModel) tblGrades.getModel();
    model.setRowCount(0); // Mevcut tabloyu temizle

    try {
        List<Grades> grades = Grades.getAllGrades(); // SQL Ã¼zerinden notlarÄ± al
        for (Grades grade : grades) {
            model.addRow(new Object[]{
                grade.getGrdId(),
                grade.getStdId(),
                grade.getCrsId(),
                grade.getGrdMt(),
                grade.getGrdHw(),
                grade.getGrdFinal(),
                grade.getGrdLgrade()
            });
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error fetching grades: " + e.getMessage());
    }
}
    
    private void btnAddGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddGradeActionPerformed
    try {
        int stdId = Integer.parseInt(txtStudentId.getText());
        int crsId = Integer.parseInt(txtCourseId.getText());
        float grdMt = Float.parseFloat(txtMidterm.getText());
        float grdHw = Float.parseFloat(txtHomework.getText());
        float grdFinal = Float.parseFloat(txtFinal.getText());
        String grdLgrade = txtLetterGrade.getText();

        // SQL ile Grade ekle (grdId otomatik olarak atanÄ±r)
        Grades.addGrade(stdId, crsId, grdMt, grdHw, grdFinal, grdLgrade);

        JOptionPane.showMessageDialog(this, "Grade added successfully!");
        refreshGradesTable(); // Tabloyu gÃ¼ncelle
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error adding grade: " + e.getMessage());
    }
    }//GEN-LAST:event_btnAddGradeActionPerformed

    private void btnEditGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditGradeActionPerformed
    try {
        int selectedRow = tblGrades.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a grade to edit!");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblGrades.getModel();
        int grdId = (int) model.getValueAt(selectedRow, 0); // SeÃ§ilen satÄ±rdaki Grade ID'yi al
        int stdId = Integer.parseInt(txtStudentId.getText());
        int crsId = Integer.parseInt(txtCourseId.getText());
        float grdMt = Float.parseFloat(txtMidterm.getText());
        float grdHw = Float.parseFloat(txtHomework.getText());
        float grdFinal = Float.parseFloat(txtFinal.getText());
        String grdLgrade = txtLetterGrade.getText();

        // SQL ile Grade dÃ¼zenle
        Grades.editGrade(grdId, stdId, crsId, grdMt, grdHw, grdFinal, grdLgrade);

        JOptionPane.showMessageDialog(this, "Grade updated successfully!");
        refreshGradesTable(); // Tabloyu gÃ¼ncelle
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error updating grade: " + e.getMessage());
    }
    }//GEN-LAST:event_btnEditGradeActionPerformed

    private void btnDeleteGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteGradeActionPerformed
        int selectedRow = tblGrades.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a grade to delete!");
            return;
        }

        try {
            DefaultTableModel model = (DefaultTableModel) tblGrades.getModel();
            int grdId = (int) model.getValueAt(selectedRow, 0);

            Grades.deleteGrade(grdId);

            JOptionPane.showMessageDialog(this, "Grade deleted successfully!");
            refreshGradesTable(); // Tabloyu gÃ¼ncelle
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error deleting grade: " + e.getMessage());
        }
    }//GEN-LAST:event_btnDeleteGradeActionPerformed

    private void btnListAllGradesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListAllGradesActionPerformed
refreshGradesTable();
    }//GEN-LAST:event_btnListAllGradesActionPerformed

    private void btnBackToMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToMenuActionPerformed
        // TODO add your handling code here:
    btnBackToMenu.addActionListener(e -> {
    MainMenu mainMenu = new MainMenu();
    mainMenu.setVisible(true);
    dispose(); // StudentFrame'i kapat
});        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackToMenuActionPerformed

    private void txtStudentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStudentIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GradesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GradesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GradesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GradesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GradesFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddGrade;
    private javax.swing.JButton btnBackToMenu;
    private javax.swing.JButton btnDeleteGrade;
    private javax.swing.JButton btnEditGrade;
    private javax.swing.JButton btnListAllGrades;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblGrades;
    private javax.swing.JTextField txtCourseId;
    private javax.swing.JTextField txtFinal;
    private javax.swing.JTextField txtHomework;
    private javax.swing.JTextField txtLetterGrade;
    private javax.swing.JTextField txtMidterm;
    private javax.swing.JTextField txtStudentId;
    // End of variables declaration//GEN-END:variables
}
